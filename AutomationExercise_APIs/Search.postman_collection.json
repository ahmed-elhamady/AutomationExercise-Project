{
	"info": {
		"_postman_id": "41d97d8b-6aca-449e-a052-ad5228ef4db1",
		"name": "Search",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37609950"
	},
	"item": [
		{
			"name": "PostToSearchProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that status code is 200 ok\", function (){\r",
							"    pm.expect(pm.response).to.have.status(200);\r",
							"});\r",
							"pm.test(\"Verify that response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Verify that response body contains 'responseCode' with value equal to 200\", function(){\r",
							"    pm.expect(pm.response.json()).to.have.property('responseCode', 200);\r",
							"});\r",
							"pm.test(\"Verify that all product contains id, name, price, brand and category\", function(){\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an('object');\r",
							"    pm.expect(responseJson.products).to.be.an('array');\r",
							"\r",
							"    responseJson.products.forEach(function(product){\r",
							"        pm.expect(product).to.have.property('id');\r",
							"        pm.expect(product).to.have.property('name');\r",
							"        pm.expect(product).to.have.property('price');\r",
							"        pm.expect(product).to.have.property('brand');\r",
							"        pm.expect(product).to.have.property('category');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "search_product",
							"value": "jean",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{SearchURL}}",
					"host": [
						"{{SearchURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostToSearchProductWithoutParameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that status code is 200 ok\", function(){\r",
							"    pm.expect(pm.response).to.have.status(200);\r",
							"});\r",
							"pm.test(\"Verify that response time is less than 1s\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Verify that response body contains 'responseCode' with value equal to 400 and 'message' with value: Bad request, search_product parameter is missing in POST request.\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody).to.have.property('responseCode', 400);\r",
							"    pm.expect(responseBody).to.have.property('message', \"Bad request, search_product parameter is missing in POST request.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{SearchURL}}",
					"host": [
						"{{SearchURL}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "SearchURL",
			"value": "https://automationexercise.com/api/searchProduct",
			"type": "string"
		}
	]
}