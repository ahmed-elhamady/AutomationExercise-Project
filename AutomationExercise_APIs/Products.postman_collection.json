{
	"info": {
		"_postman_id": "8925473c-354a-43e9-b710-42711601a4b1",
		"name": "Products",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37609950"
	},
	"item": [
		{
			"name": "GetAllProducts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that status code is 200 ok\", function(){\r",
							"    pm.expect(pm.response).to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify that response time is less than 1s\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Verify that response body contains 'responseCode' with value equal to 200\", function () {\r",
							"     pm.expect(pm.response.json()).to.have.property('responseCode', 200);\r",
							"});\r",
							"pm.test(\"Verify that all products cntains id, name, price, brand and category\", function () {\r",
							"     var responseJSON = pm.response.json();\r",
							"     pm.expect(responseJSON).to.be.an('object');\r",
							"     pm.expect(responseJSON.products).to.be.an('array');\r",
							"     \r",
							"     responseJSON.products.forEach(function(product){\r",
							"            pm.expect(product).to.have.property('id');\r",
							"            pm.expect(product).to.have.property('name');\r",
							"            pm.expect(product).to.have.property('price');\r",
							"            pm.expect(product).to.have.property('brand');\r",
							"            pm.expect(product).to.have.property('category');\r",
							"     });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{productURL}}",
					"host": [
						"{{productURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostAllProducts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that status code is 200 ok\", function(){\r",
							"    pm.expect(pm.response).to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify that response time is less than 1s\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Verify that response body contains 'responseCode' with value equal to 405 and 'message' with value 'This request method is not supported'\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('object');\r",
							"    pm.expect(jsonData).to.have.property('responseCode', 405);\r",
							"    pm.expect(jsonData).to.have.property('message', \"This request method is not supported.\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{productURL}}",
					"host": [
						"{{productURL}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "productURL",
			"value": "https://automationexercise.com/api/productsList",
			"type": "string"
		}
	]
}